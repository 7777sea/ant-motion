(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{1131:function(n,a){n.exports={content:["section",["h2","怎么使用"],["h3","安装"],["pre",{lang:"bash",highlighted:'$ <span class="token function">npm</span> <span class="token function">install</span> rc-queue-anim --save'},["code","$ npm install rc-queue-anim --save"]],["h3","使用"],["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> QueueAnim <span class="token keyword">from</span> <span class="token string">\'rc-queue-anim\'</span><span class="token punctuation">;</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>QueueAnim</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>依次进场<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>依次进场<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>依次进场<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>依次进场<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>QueueAnim</span><span class="token punctuation">></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code",'import QueueAnim from \'rc-queue-anim\';\nReactDOM.render(<QueueAnim>\n  <div key="demo1">依次进场</div>\n  <div key="demo2">依次进场</div>\n  <div key="demo3">依次进场</div>\n  <div key="demo4">依次进场</div>\n</QueueAnim>, mountNode);']],["blockquote",["p","每个子标签必须带 key，如果未设置 key 将不执行动画。"]]],meta:{cols:2,order:2,vertical:!0,title:{"zh-CN":"进出场动画","en-US":"QueueAnim"},filename:"components/queue-anim/index.zh-CN.md"},description:["section",["p","通过简单的配置对一组元素添加串行的进场动画效果。具体参数请参见 ",["a",{title:null,href:"/api/queue-anim"},"API"]],["h2","何时使用"],["ul",["li",["p","从内容 A 到内容B的转变过程时能有效的吸引用户注意力，突出视觉中心，提高整体视觉效果。"]],["li",["p","小的信息元素排布或块状较多的情况下，根据一定的路径层次依次进场，区分维度层级，来突显量级，使页面转场更加流畅和舒适，提高整体视觉效果和产品的质感。"]],["li",["p","特别适合首页和需要视觉展示效果的宣传页，以及单页应用的切换页面动效。"]]]],toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#怎么使用",title:"怎么使用"},"怎么使用"]],["li",["a",{className:"bisheng-toc-h2",href:"#API",title:"API"},"API"]]],api:["section",["h2","API"],["blockquote",["p","v1.2.0 animConfig 增加 ",["a",{title:null,href:"http://react-component.github.io/queue-anim/examples/timeline.html"},"timeline"]]],["table",["thead",["tr",["th","参数"],["th","类型"],["th","默认"],["th","详细"]]],["tbody",["tr",["td","type"],["td","string / array"],["td",["code","right"]],["td","动画内置参数 ",["br"]," ",["code","alpha"]," ",["code","left"]," ",["code","right"]," ",["code","top"]," ",["code","bottom"]," ",["code","scale"]," ",["code","scaleBig"]," ",["code","scaleX"]," ",["code","scaleY"]]],["tr",["td","animConfig"],["td","object / array"],["td","null"],["td","配置动画参数",["br"],"  如 ",["code","{ opacity:[1, 0] }"]," ",["br"],"参数为: ",["code","{ opacity: Array<end, start> }"],["br"],"出场则相反: ",["code","{ opacity: Array<start, end> }"],"; 详细说明查看下面的 ",["a",{title:null,href:"#animConfig"},"animConfig"]]],["tr",["td","delay"],["td","number / array"],["td","0"],["td","整个动画的延时,以毫秒为单位"]],["tr",["td","duration"],["td","number / array"],["td","450"],["td","每个动画的时间,以毫秒为单位"]],["tr",["td","interval"],["td","number / array"],["td","100"],["td","每个动画的间隔时间,以毫秒为单位"]],["tr",["td","leaveReverse"],["td","boolean"],["td","false"],["td","出场时是否倒放,从最后一个 dom 开始往上播放"]],["tr",["td","ease"],["td","string / array"],["td",["code","easeOutQuart"]],["td","动画的缓动函数,",["a",{title:null,href:"http://julian.com/research/velocity/#easing"},"查看详细"]]],["tr",["td","appear"],["td","boolean"],["td","true"],["td","开始进入时是否有动画"]],["tr",["td","animatingClassName"],["td","array"],["td",["code","['queue-anim-entering', 'queue-anim-leaving']"]],["td","进出场动画进行中的类名"]],["tr",["td","component"],["td","string"],["td",["code","div"]],["td","QueueAnim 替换的标签名"]],["tr",["td","componentProps"],["td","object"],["td","{}"],["td","组件的 props"]],["tr",["td","onEnd"],["td","func"],["td","null"],["td","动画结束后回调， callback({ key, type }); type 为 ",["code","enter"]," 或 ",["code","leave"]]]]],["blockquote",["p","当以上数据类型为 Array 时，",["code","['left', 'top']"]," 第一个为进场动画属性, 第二个为离场属性。"]],["h3","animConfig"],["p",["strong","数据分为三种："]],["ul",["li",["p","自定义设定开始样式: ",["code","{ opacity:[1, 0] }"]," ；\n",["br"]," 默认数据类型；\n",["br"],"参数类型: ",["code","{ opacity: Array<end, start> }"],"；\n",["br"],"出场自动反向: ",["code","{ opacity: Array<start, end> }"],"；\n",["br"],"\n",["br"]]],["li",["p","自定义样式: ",["code","{ opacity: 0 }"],"；\n",["br"]," 不设置开始位置。\n",["br"],"\n",["br"]]]],["ul",["li",["p","自定义数组进出场样式: ",["code","[{ opacity:[1, 0] }, { opacity:[1, 0] }]"],"；\n",["br"]," 数组型;\n",["br"]," 参数类型: ",["code","[{ opacity: Array<end, start> }, { opacity: Array<start, end>}]"]]]]]}}}]);
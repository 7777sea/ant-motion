(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{1166:function(t,e){t.exports={content:["section",["h2","How To Use"],["h3","Install"],["pre",{lang:"bash",highlighted:'$ <span class="token function">npm</span> <span class="token function">install</span> rc-texty --save'},["code","$ npm install rc-texty --save"]],["h3","Usage"],["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> Texty <span class="token keyword">from</span> <span class="token string">\'rc-texty\'</span><span class="token punctuation">;</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Texty</span><span class="token punctuation">></span></span>text<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Texty</span><span class="token punctuation">></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","import Texty from 'rc-texty';\nReactDOM.render(<Texty>text</Texty>, mountNode);"]]],meta:{order:3,title:"TextyAnim",filename:"components/texty/index.en-US.md"},description:["section",["p","A component for entering and leaving animations for text titles, providing non-rich animation, or configuring different effects according to your own needs. See the specific ref ",["a",{title:null,href:"/api/texty"},"API"],";"],["h2","When To Use"],["ul",["li",["p","Used in the animation elements of the enter and leave, for interval animation of the title or body text."]],["li",["p","An animation of the enter of each word at different times."]]]],toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#How-To-Use",title:"How To Use"},"How To Use"]],["li",["a",{className:"bisheng-toc-h2",href:"#API",title:"API"},"API"]]],api:["section",["h2","API"],["table",["thead",["tr",["th","name"],["th","type"],["th","default"],["th","description"]]],["tbody",["tr",["td","className"],["td","string"],["td",["code","null"]],["td","class name."]],["tr",["td","prefixCls"],["td","string"],["td",["code","texty"]],["td","prefix class."]],["tr",["td","type"],["td","string"],["td",["code","top"]],["td","animation type,  ",["code","left"]," ","|"," ",["code","right"]," ","|"," ",["code","top"]," ","|"," ",["code","bottom"]," ","|",["code","alpha"]," ","|"," ",["code","scale"]," ","|","  ",["code","scaleX"]," ","|"," ",["code","scaleBig"]," ","|"," ",["code","scaleY"]," ","|"," ",["code","mask-bottom"]," ","|"," ",["code","mask-top"]," ","|","  ",["code","flash"]," ","|"," ",["code","bounce"]," ","|"," ",["code","swing"]," ","|"," ",["code","swing-y"]," ","|"," ",["code","swing-rotate"],"."]],["tr",["td","mode"],["td","string"],["td",["code","smooth"]],["td","animate sport mode.  ",["code","smooth"]," ","|"," ",["code","reverse"]," ","|"," ",["code","random"]," ","|"," ",["code","sync"]]],["tr",["td","duration"],["td","number"],["td",["code","450"]],["td","Except for special animation   ",["code","flash"]," ","|"," ",["code","bounce"]," ","|"," ",["code","swing"]," ","|"," ",["code","swing-y"]," ","|"," ",["code","swing-rotate"],". one text animation duration"]],["tr",["td","delay"],["td","number"],["td",["code","0"]],["td","animation overall delay."]],["tr",["td","interval"],["td","number ","|"," func"],["td",["code","50"]],["td","animation interval, is function: ",["code","function: (e: { key: string }) => number."]," Key is split text plus sequence(text-1). example: ",["code","text"],", key is ",["code","t-0"],"、",["code","e-1"],"、",["code","x-2"],"、",["code","t-3"],"."]],["tr",["td","split"],["td","func"],["td",["code","null"]],["td","children split, return string"]]]],["h3","Inherit TweenOneGroup API"],["p",["a",{title:null,href:"/api/tween-one#TweenOneGroup-API"},"TweenOneGroup API"]],["table",["thead",["tr",["th","name"],["th","type"],["th","default"],["th","description"]]],["tbody",["tr",["td","appear"],["td","boolean"],["td","true"],["td","Whether the element has an initial appear animation."]],["tr",["td","enter"],["td","object / array / func"],["td","{ x: 30, opacity: 0, type: 'from' }"],["td","Enter the tween-one animation data, if the array is tween-one timeline. func reference queue-anim, callbac({key,index})"]],["tr",["td","leave"],["td","object / array / func"],["td","{ x: 30, opacity: 0 }"],["td","Leave the tween-one animation data, same as above."]],["tr",["td","onEnd"],["td","func"],["td","-"],["td","Callback after each animation ends."]],["tr",["td","animatingClassName"],["td","array"],["td",["code","['tween-one-entering', 'tween-one-leaving']"]],["td","The style of entering and leaving, if it is a component form, you need to bring the className to your component."]],["tr",["td","resetStyle"],["td","boolean"],["td","true"],["td","TweenOne's ",["code","resetStyle"],", resets the initial style when switching animations."]],["tr",["td","exclusive"],["td","boolean"],["td","false"],["td","Whether to allow new animations to be executed immediately upon switching. ",["code","enter => leave"],": execute leaving animation immediately."]],["tr",["td","component"],["td","React.Element/String"],["td","div"],["td","-"]]]]]}}}]);